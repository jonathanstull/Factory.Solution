@{ Layout = "_Layout"; }

@model SillyFactory.Models.Machine

<h2>@Html.DisplayNameFor(model => model.Model): @Html.DisplayFor(model => model.Model): @Html.DisplayFor(model => model.Serial)</h2>

<h3>Current details</h3>
<p>@Html.DisplayNameFor(model => model.Dept): @Html.DisplayFor(model => model.Dept)</p>
<p>@Html.DisplayNameFor(model => model.Make): @Html.DisplayFor(model => model.Make)</p>
<p>@Html.DisplayNameFor(model => model.Model): @Html.DisplayFor(model => model.Model)</p>
<p>@Html.DisplayNameFor(model => model.Serial): @Html.DisplayFor(model => model.Serial)</p>
<p>@Html.DisplayNameFor(model => model.InstDate): @Html.DisplayFor(model => model.InstDate)</p>

@if(@Model.EMJoinEntities.Count == 0)
{
  <p>This machine is not assigned to any engineers.</p>
}
else
{
  <h3>Engineers this machine is assigned to:</h3>
  <ul>
    @foreach(var join in Model.EMJoinEntities)
    {
      <li>@join.Engineer.Name</li>
      @using (Html.BeginForm("DeleteEngineer", "Machines"))
      {
        @Html.Hidden("joinId", @join.Id)
        <input type="submit" value="Delete"/>
      }
    }
  </ul>
}
<p>@Html.ActionLink("Back to machine inventory", "Index")</p>
<p>@Html.ActionLink("Update machine", "Edit", new { id = Model.MachineId })</p>
<p>@Html.ActionLink("Delete machine", "Delete", new { id = Model.MachineId })</p>